<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <!--The viewport meta tag is used to improve the presentation and behavior of the samples 
      on iOS devices-->
    <meta name="viewport" content="initial-scale=1, maximum-scale=1,user-scalable=no">
    <title>QueryTask with geometry, queries with multiple results at the same location are displayed in an InfoWindow</title>

    <link rel="stylesheet" href="http://js.arcgis.com/3.9/js/dojo/dijit/themes/claro/claro.css">
    <link rel="stylesheet" href="http://js.arcgis.com/3.9/js/esri/css/esri.css">
    
    <script src="http://js.arcgis.com/3.9/"></script>
    <script>
      dojo.require("esri.map");
      dojo.require("esri.tasks.query");
       
      // require(["esri/config"], function(esriConfig) { 
      //     esriConfig.defaults.io.proxyUrl = "http://sampleserver1.arcgisonline.com/"
      //     esriConfig.defaults.io.alwaysUseProxy = true;
      //  });

      var map, queryTask, query;
      var featureSet;

      
       
      function init() {
        var customExtentAndSR = new esri.geometry.Extent(-12947200.702,3986037.689,-12927632.823,3996365.181, new esri.SpatialReference({"wkid":3857}));
        //create map with new custom spatial reference and extent.  The map will be in the Goode Homolosine Land projection
        map = new esri.Map("map", { 
          extent: customExtentAndSR ,
          basemap: "satellite", 
          zoom: 20
          });
        //map service layer has a default spatial reference of 4326.
        var mapServiceLayer1 = new esri.layers.ArcGISDynamicMapServiceLayer("http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer");
        map.addLayer(mapServiceLayer1);
        var mapServiceLayer2 = new esri.layers.ArcGISDynamicMapServiceLayer("http://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer");
        map.addLayer(mapServiceLayer2);
        var mapServiceLayer3 = new esri.layers.ArcGISDynamicMapServiceLayer("http://50.112.160.181:6080/arcgis/rest/services/demo/demo_gis_ms/MapServer");
        map.addLayer(mapServiceLayer3);

        //Listen for click event on the map, when the user clicks on the map call executeQueryTask function.
        dojo.connect(map, "onClick", executeQueryTask);

        //Listent for infoWindow onHide event
        dojo.connect(map.infoWindow, "onHide", function() { map.graphics.clear();});

        //build query task
        queryTask = new esri.tasks.QueryTask("http://50.112.160.181:6080/arcgis/rest/services/demo/demo_gis_ms/MapServer/8");

        //Can listen for onComplete event to process results or can use the callback option in the queryTask.execute method.
        //dojo.connect(queryTask, "onComplete", showResults);

        //build query filter
        query = new esri.tasks.Query();
        query.outSpatialReference = {"wkid":3857};
        //query.where = "1=1";
        //query.outFields = ["facilityid"];
        query.returnGeometry = true;
        query.outFields = ["facilityid", "watertype", "subtypecode", "projectnumber", "lifecyclestatus", "material", "hyperlink", "pressurezone", "exteriorcoating", "liningtype", "pipeclass", "roughness", "diameter", "pressurerating", "comments", "installdate", "shape", "objectid"];
      } 

      function executeQueryTask(evt) {
        map.infoWindow.hide();
        map.graphics.clear();
        featureSet = null;

        //onClick event returns the evt point where the user clicked on the map.
        //This is contains the mapPoint (esri.geometry.point) and the screenPoint (pixel xy where the user clicked).
        //set query geometry = to evt.mapPoint Geometry
        //query.geometry = evt.mapPoint;
        query.geometry = new esri.geometry.Extent(evt.mapPoint.x - 5, evt.mapPoint.y - 5, evt.mapPoint.x + 5, evt.mapPoint.y + 5, evt.mapPoint.spatialReference);


        //Execute task and call showResults on completion
        queryTask.execute(query, function(fset) {
          if (fset.features.length === 1) {
            showFeature(fset.features[0],evt);
          } else if (fset.features.length !== 0) {
            showFeatureSet(fset,evt);
          }
        });
        //queryTask.execute(query, showResults);
      }

      function showFeature(feature,evt) {
        map.graphics.clear();

        //set symbol
        var symbol = new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new dojo.Color([255,0,0]), 2), new dojo.Color([255,255,0,0.5]));
        feature.setSymbol(symbol);

        //construct infowindow title and content
        var attr = feature.attributes;
        var title = attr.installdate;
        var installdate = new Date(attr.installdate);
        var today = new Date();
        var current_year = today.getFullYear();

        var content = "<p style='font-size: 18px; margin: 0px;'><b>old pipes in the <span class='arrow'></span><span class='close' style='float: right; cursor:pointer;'  onclick='map.infoWindow.hide();'><b>x</b></span><br/>system </b></p><p style='font-size: 38px; padding-left: 52px;' >" + (current_year - installdate.getUTCFullYear() ) + " years <span><input type='button' class='btnNext' style='padding: 15px;'/><br/>ago</p><span style='padding-left: 15px;'><img src='/assets/uComm.gif' style='position: absolute;left: 7px;bottom: 7px;'>ucomm</span><span style='padding-left: 107px;'><img src='/assets/create-task.gif' style=' position: absolute; bottom: 7px;right: 109px;'>create task</span>"
        
        map.graphics.add(feature);

        //map.infoWindow.setTitle(title);
        map.infoWindow.setContent(content);

        (evt) ? map.infoWindow.show(evt.screenPoint,map.getInfoWindowAnchor(evt.screenPoint)) : null;
      }

      function showFeatureSet(fset,evt) {
        //remove all graphics on the maps graphics layer
        map.graphics.clear();
        var screenPoint = evt.screenPoint;

        featureSet = fset;

        var numFeatures = featureSet.features.length;

        //QueryTask returns a featureSet.  Loop through features in the featureSet and add them to the infowindow.
        var title = "You have selected " + numFeatures + " pipes.<br/>";
        var content = "<span class='arrow'></span><a href='#'><span class='close' style='float: right'  onclick='map.infoWindow.hide();'>x</span></a>Please select desired pipe from the list below.<br/><br/>";

        for (var i=0; i<numFeatures; i++) {
          var graphic = featureSet.features[i];
          content = content + graphic.attributes.facilityid + " Field (<A href='#' onclick='showFeature(featureSet.features[" + i + "]);'>show</A>)<br/>";
        }
        //map.infoWindow.setTitle(title);
        map.infoWindow.setContent(content);
        map.infoWindow.show(screenPoint,map.getInfoWindowAnchor(evt.screenPoint));
      }  

      dojo.ready(init);

          
    </script>
    </head>
    <style>
      html, body, #map {
        padding:0;
        margin:0;
        height:100%;
      }
      .btnNext
      {
        float: right;
        margin-top: 40px;
        background: url(/assets/nextbutton.gif) no-repeat left top;
        border: none;
        width: 19px;
      }


      
      .esriPopup .contentPane  {
          background-color: #0F243E !important;
          width: 266px !important;
          padding: 0px 7px !important;
          color: #fff !important;
          font-family: MS Reference Sans serif, Calibri, Arial !important;
          -moz-box-shadow: 3px 3px 5px 6px #ccc !important;
          -webkit-box-shadow: 3px 3px 5px 6px #ccc !important;
          box-shadow: 4px 6px 6px 0px #000 !important;
          border: none;
      } 
      .esriPopup .outerPointer.left {
        color: #0F243E !important ;
        background: url(/assets/arrow.png) no-repeat left top;
        height: 19px;
        left: 4px;
      }
      .esriPopup .pointer.topLeft {
        color: #0F243E !important ;
        background: url(/assets/arrow-top.png) no-repeat left top;
        height: 19px;
      }

      .esriPopup .pointer.top{
        background: url(/assets/arrow-top.png) no-repeat left top;
        color: #0F243E !important ;
        height: 19px;
      }
      .esriPopup .outerPointer.right {
        background: url(/assets/arrow-right.png) no-repeat left top;
        color: #0F243E !important ;
        height: 19px;
      }
      .esriPopup .pointer.topRight {
        background: url(/assets/arrow-top.png) no-repeat left top;
        color: #0F243E !important ;
        height: 19px;
      }  
      .esriPopup .pointer.bottomRight{
        background: url(/assets/arrow-bottom.png) no-repeat left top;
        color: #0F243E !important ;
        height: 19px;
      }
      .esriPopup .pointer.bottom {
        background: url(/assets/arrow-bottom.png) no-repeat left top;
        color: #0F243E !important ;
        height: 19px;
      }  
      .esriPopup .pointer.bottomLeft{
        background: url(/assets/arrow-bottom.png) no-repeat left top;
        color: #0F243E !important ;
        height: 19px;
      }  
      }
    </style>
      <body class="claro">
        <div data-dojo-type="dijit.layout.BorderContainer" 
           data-dojo-props="design:'headline', gutters:false"
           style="width: 100%; height: 100%; margin: 0;">

         <div id="map" 
               data-dojo-type="dijit.layout.ContentPane" 
               data-dojo-props="region:'center'">
            <br/>
        </div>

       </div>
    </html>

       

      